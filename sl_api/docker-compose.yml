version: "3"

services:
  camera_stream:
    build:
      context: ./camera_server
    ports:
      - "6003:6003"
    env_file: .env
    restart: ${RESTART_POLICY}
  db:
    image: postgres:15-alpine
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: ${RESTART_POLICY}
  app:
    build:
      context: .
    ports:
      - "8003:8000"
    volumes:
      - ./app:/app
    env_file: .env
    depends_on:
      - db
    restart: ${RESTART_POLICY}
  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
  influxdb:
    image: influxdb:2.7-alpine
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2:rw
      - influxdb_config:/etc/influxdb2:rw
    env_file: .env
    restart: ${RESTART_POLICY}
  telegraf:
    image: telegraf:1.30-alpine
    depends_on:
      - influxdb
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    env_file: .env
    restart: ${RESTART_POLICY}
  grafana:
    image: grafana/grafana:9.0.4
    ports:
      - 3003:3000
    env_file: .env
    restart: ${RESTART_POLICY}
volumes:
  postgres_data:
  redis_data:
  influxdb_data:
  influxdb_config:
